angular.module("fluro.access",["fluro.content"]),angular.module("fluro.access").service("FluroAccess",function($rootScope,$q,FluroContent){var controller={};return controller.isFluroAdmin=function(){return $rootScope.user?"administrator"==$rootScope.user.accountType:!1},controller.getPermissionSets=function(){return $rootScope.user?$rootScope.user.permissionSets:[]},controller.has=function(permission){if(!$rootScope.user)return!1;var permissionSets=$rootScope.user.permissionSets,permissions=_.chain(permissionSets).map(function(permissionSet){return permissionSet.permissions}).flatten().uniq().value();return console.log("Has Permissions",permissions),_.contains(permissions,permission)},controller.canAccess=function(type){if(!$rootScope.user)return!1;if(controller.isFluroAdmin())return!0;var canViewOwnRealms=(controller.retrieveActionableRealms("create "+type),controller.retrieveActionableRealms("view own "+type)),canViewAnyRealms=controller.retrieveActionableRealms("view any "+type),canEditOwnRealms=controller.retrieveActionableRealms("edit own "+type),canEditAnyRealms=controller.retrieveActionableRealms("edit any "+type),totalRealms=[];return totalRealms=totalRealms.concat(canViewOwnRealms),totalRealms=totalRealms.concat(canViewAnyRealms),totalRealms=totalRealms.concat(canEditOwnRealms),totalRealms=totalRealms.concat(canEditAnyRealms),totalRealms.length?!0:!1},controller.retrieveActionableRealms=function(action){if(!$rootScope.user)return[];var permissionSets=$rootScope.user.permissionSets;return _.chain(permissionSets).map(function(realmSet,key){var searchString=action;return _.contains(realmSet.permissions,searchString)?key.toString():void 0}).compact().value()},controller.retrieveSelectableRealms=function(action){if(!$rootScope.user)return[];var realms;if(controller.isFluroAdmin())realms=FluroContent.resource("realm").query({list:!0});else{var permissionSets=$rootScope.user.permissionSets;realms=_.chain(permissionSets).filter(function(realmSet){var searchString=action;return _.contains(realmSet.permissions,searchString)}).compact().map(function(realm){return{_id:realm._id,title:realm.title}}).value()}return realms},controller.can=function(action,type){if(!$rootScope.user)return!1;if(controller.isFluroAdmin())return!0;var perm=action+" "+type,realms=[];switch(action){case"view any":var canViewAnyRealms=controller.retrieveActionableRealms("view any "+type),canEditAnyRealms=controller.retrieveActionableRealms("edit any "+type);realms=realms.concat(canViewAnyRealms),realms=realms.concat(canEditAnyRealms);break;case"view own":var canViewOwnRealms=controller.retrieveActionableRealms("view own "+type),canEditOwnRealms=controller.retrieveActionableRealms("edit own "+type);realms=realms.concat(canViewOwnRealms),realms=realms.concat(canEditOwnRealms);break;default:realms=controller.retrieveActionableRealms(perm)}return realms.length?!0:!1},controller.isAuthor=function(item){if(!$rootScope.user)return!1;var author=!1;return author=_.isObject(item.author)?item.author._id==$rootScope.user._id:item.author==$rootScope.user._id,$rootScope.user._id==item._id&&(author=!0),author},controller.canEditItem=function(item,user){if(!$rootScope.user)return!1;if(controller.isFluroAdmin())return!0;if(!item)return!1;var definitionName=item._type;item.definition&&(definitionName=item.definition);var author=controller.isAuthor(item);if(user&&(definitionName="user",author))return!0;var editAnyRealms=controller.retrieveActionableRealms("edit any "+definitionName),editOwnRealms=controller.retrieveActionableRealms("edit own "+definitionName),contentRealmIds=_.map(item.realms,function(realm){return realm._id?realm._id:realm});!item.realms,console.log(definitionName,editAnyRealms,editOwnRealms);var matchedAnyRealms=_.intersection(editAnyRealms,contentRealmIds);if(matchedAnyRealms.length)return!0;if(author){var matchedOwnRealms=_.intersection(editOwnRealms,contentRealmIds);if(matchedOwnRealms.length)return!0}},controller.canViewItem=function(item,user){if(!$rootScope.user)return!1;if(controller.isFluroAdmin())return!0;var definitionName=item._type;item.definition&&(definitionName=item.definition);var author=controller.isAuthor(item);if(user&&(definitionName="user",author))return!0;var viewAnyRealms=controller.retrieveActionableRealms("view any "+definitionName),viewOwnRealms=controller.retrieveActionableRealms("view own "+definitionName),editAnyRealms=controller.retrieveActionableRealms("edit any "+definitionName),editOwnRealms=controller.retrieveActionableRealms("edit own "+definitionName),combinedAnyRealms=[];combinedAnyRealms=combinedAnyRealms.concat(viewAnyRealms),combinedAnyRealms=combinedAnyRealms.concat(editAnyRealms);var combinedOwnRealms=[];combinedOwnRealms=combinedOwnRealms.concat(viewOwnRealms),combinedOwnRealms=combinedOwnRealms.concat(editOwnRealms);var contentRealmIds=_.map(item.realms,function(realm){return realm._id?realm._id:realm}),matchedAnyRealms=_.intersection(combinedAnyRealms,contentRealmIds);if(matchedAnyRealms.length)return!0;if(author){var matchedOwnRealms=_.intersection(combinedOwnRealms,contentRealmIds);if(matchedOwnRealms.length)return!0}},controller.canDeleteItem=function(item,user){if(!$rootScope.user)return!1;if(controller.isFluroAdmin())return!0;var definitionName=item._type;item.definition&&(definitionName=item.definition);var author=controller.isAuthor(item);if(user&&(definitionName="user",author))return!0;var deleteAnyRealms=controller.retrieveActionableRealms("delete any "+definitionName),deleteOwnRealms=controller.retrieveActionableRealms("delete own "+definitionName),contentRealmIds=_.map(item.realms,function(realm){return realm&&realm._id?realm._id:realm}),matchedAnyRealms=_.intersection(deleteAnyRealms,contentRealmIds);if(matchedAnyRealms.length)return!0;if(author){var matchedOwnRealms=_.intersection(deleteOwnRealms,contentRealmIds);if(matchedOwnRealms.length)return!0}},controller.resolveIf=function(bool){var deferred=$q.defer();return bool?deferred.resolve():deferred.reject(),deferred.promise},controller});